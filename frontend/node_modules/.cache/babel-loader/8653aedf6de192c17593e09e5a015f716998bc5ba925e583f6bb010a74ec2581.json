{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHI\\\\OneDrive\\\\Desktop\\\\intern assignment\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  allowedRole\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [authorized, setAuthorized] = useState(false);\n  useEffect(() => {\n    (async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setAuthorized(false);\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await api.get('/auth/me');\n        if (allowedRole && res.user.role !== allowedRole) setAuthorized(false);else setAuthorized(true);\n      } catch (err) {\n        setAuthorized(false);\n      }\n      setLoading(false);\n    })();\n  }, [allowedRole]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this);\n  if (!authorized) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 27\n  }, this);\n  return children;\n}\n_s(ProtectedRoute, \"gikolyhxMALaF5kh7V57C2MeGx8=\");\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","api","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRole","_s","loading","setLoading","authorized","setAuthorized","token","localStorage","getItem","res","get","user","role","err","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/ABHI/OneDrive/Desktop/intern assignment/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport api from '../services/api';\nexport default function ProtectedRoute({ children, allowedRole }) {\n  const [loading, setLoading] = useState(true);\n  const [authorized, setAuthorized] = useState(false);\n  useEffect(() => { (async () => {\n    const token = localStorage.getItem('token');\n    if (!token) { setAuthorized(false); setLoading(false); return; }\n    try { const res = await api.get('/auth/me'); if (allowedRole && res.user.role !== allowedRole) setAuthorized(false); else setAuthorized(true); } catch (err) { setAuthorized(false); }\n    setLoading(false);\n  })(); }, [allowedRole]);\n  if (loading) return <div>Loading...</div>;\n  if (!authorized) return <Navigate to='/login' replace />;\n  return children;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnDD,SAAS,CAAC,MAAM;IAAE,CAAC,YAAY;MAC7B,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QAAED,aAAa,CAAC,KAAK,CAAC;QAAEF,UAAU,CAAC,KAAK,CAAC;QAAE;MAAQ;MAC/D,IAAI;QAAE,MAAMM,GAAG,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC;QAAE,IAAIV,WAAW,IAAIS,GAAG,CAACE,IAAI,CAACC,IAAI,KAAKZ,WAAW,EAAEK,aAAa,CAAC,KAAK,CAAC,CAAC,KAAMA,aAAa,CAAC,IAAI,CAAC;MAAE,CAAC,CAAC,OAAOQ,GAAG,EAAE;QAAER,aAAa,CAAC,KAAK,CAAC;MAAE;MACrLF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,CAAC;EAAE,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EACvB,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAAE,QAAA,EAAK;EAAU;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAI,CAACb,UAAU,EAAE,oBAAOP,OAAA,CAACH,QAAQ;IAACwB,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACxD,OAAOlB,QAAQ;AACjB;AAACE,EAAA,CAZuBH,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}